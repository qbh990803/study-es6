/**
 * RegExp
 *
 */

/**
 * y修饰符
 * ES6为正则表达式添加了y修饰符，叫做“粘连”修饰符
 * y修饰符的作用与g修饰符类似，也是全局匹配，后一次匹配都从上一次匹配成功的下一个位置开始。不同之处在于，
 * 修饰符只要剩余位置中存在匹配即可，而y修饰符确保匹配必须从剩余的第一个位置开始，这也即使粘连的含义。
 * TIP:
 * 1. 匹配必须从re.lastIndex开始(相当于正则表达中的^)
 * 2. 如果匹配到会修改re.lastIndex(相当于g模式)
 */

const s = 'aaa_aa_a'
const r1 = /a+/g
const r2 = /a+/y

r1.exec(s) // ["aaa"]
r2.exec(s) // ["aaa"]

r1.exec(s) // ["aa"]
r2.exec(s) // null

/**
 * u修饰符
 * ES6为正则表达式添加了u修饰符，含义为 “UniCode” 模式，用来处理大于 \uFFFF 的 Unicode字符。
 * 也就是说，会正确处理四个字节的 UTF-16 编码。
 */



